{"version":3,"sources":["MemberForm.js","Member.js","Section.js","Team.js","App.js","serviceWorker.js","index.js"],"names":["NewMemberForm","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","submitForm","event","preventDefault","_this$props","props","year","section","addMember","form","target","name","value","poste","photoPath","postMemberReq","XMLHttpRequest","onreadystatechange","readyState","status","_id","JSON","parse","responseText","reset","open","apiPath","setRequestHeader","getCookie","send","inherits","createClass","key","react_default","a","createElement","className","onSubmit","htmlFor","type","React","Component","EditMemberForm","_React$Component2","alert","defaultValue","Member","toggleEditing","setState","prevState","editing","deleteMember","id","window","confirm","deleteReq","member","assertThisInitialized","deleted","state","_this$state","_this$props2","loggedIn","react","MemberForm_EditMemberForm","src","process","onClick","Section","members","toConsumableArray","formatedName","charAt","toUpperCase","substring","replace","MemberForm_NewMemberForm","map","src_Member","Team","sections","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","getMembresReq","app","unfilteredMembers","filteredMembers","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","filter","membre","_iterator2","_this2","src_Section","cname","document","cookie","cookiesArray","decodeURIComponent","split","indexOf","App","authToken","years","BrowserRouter","basename","NavLink","to","activeStyle","color","Switch","Route","path","component","src_Team","Redirect","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0976118.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { getCookie } from \"./App\";\r\nimport \"./static/css/MemberForm.css\";\r\nimport { apiPath } from \"./App\";\r\n\r\nexport class NewMemberForm extends React.Component {\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        const { year, section, addMember } = this.props;\r\n        const form = event.target;\r\n        const name = form.name.value;\r\n        const poste = form.poste.value;\r\n        const photoPath = form.photoPath.value;\r\n\r\n        const postMemberReq = new XMLHttpRequest();\r\n        postMemberReq.onreadystatechange = function () {\r\n            if (this.readyState === 4 && this.status === 201) {\r\n                const _id = JSON.parse(this.responseText)._id;\r\n                addMember({ _id, name, poste, photoPath });\r\n                form.reset();\r\n            }\r\n        }\r\n        postMemberReq.open(\"POST\", `${apiPath}/api/equipe`);\r\n        postMemberReq.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n        postMemberReq.setRequestHeader(\"Authorization\", `Bearer ${getCookie(\"auth_token\")}`);\r\n        postMemberReq.send(`year=${year}&section=${section}&name=${name}&poste=${poste}&photoPath=${photoPath}`);\r\n    }\r\n\r\n    render() {\r\n        const { section } = this.props;\r\n\r\n        return (\r\n            <div className=\"NewMemberForm\">\r\n                <h3>Ajouter un membre</h3>\r\n\r\n                <form onSubmit={this.submitForm}>\r\n                    <p>\r\n                        <label htmlFor=\"name\">Nom:</label><br />\r\n                        <input type=\"text\" name=\"name\" />\r\n                    </p>\r\n                    <p>\r\n                        <label htmlFor=\"poste\">Poste:</label><br />\r\n                        <input type=\"text\" name=\"poste\" />\r\n                    </p>\r\n                    <p>\r\n                        <label htmlFor=\"photoPath\">Chemin de la photo:</label><br />\r\n                        <input type=\"text\" name=\"photoPath\" />\r\n                    </p>\r\n                    <button type=\"submit\">Create</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class EditMemberForm extends React.Component {\r\n    submitForm(event) {\r\n        event.preventDefault();\r\n        alert(event.target.name.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"EditMemberForm\">\r\n                <h3>Modification de {this.props.name}</h3>\r\n\r\n                <form onSubmit={this.submitForm}>\r\n                    <p>\r\n                        <label htmlFor=\"name\">Nom:</label><br />\r\n                        <input type=\"text\" name=\"name\" defaultValue={this.props.name} />\r\n                    </p>\r\n                    <button type=\"submit\">Modifier</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Fragment } from \"react\";\r\nimport { EditMemberForm } from \"./MemberForm\";\r\nimport { getCookie } from \"./App\";\r\nimport \"./static/css/Member.css\";\r\nimport { apiPath } from \"./App\";\r\n\r\nclass Member extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            deleted: false\r\n        }\r\n    }\r\n\r\n    toggleEditing = () => {\r\n        this.setState(prevState => ({\r\n            editing: !prevState.editing\r\n        }));\r\n    }\r\n\r\n    deleteMember = () => {\r\n        const { id, name } = this.props;\r\n        if (!window.confirm(\"Voulez-vous vraiment supprimer \" + name + \" ?\")) return;\r\n\r\n        const deleteReq = new XMLHttpRequest();\r\n        const member = this;\r\n        deleteReq.onreadystatechange = function () {\r\n            if (this.readyState === 4 && this.status === 202) {\r\n                member.setState({ deleted: true });\r\n            }\r\n        }\r\n        deleteReq.open(\"DELETE\", `${apiPath}/api/equipe/` + id);\r\n        deleteReq.setRequestHeader(\"Authorization\", \"Bearer \" + getCookie(\"auth_token\"));\r\n        deleteReq.send();\r\n    }\r\n\r\n    render() {\r\n        const { editing, deleted } = this.state;\r\n        const { year, loggedIn, section, name, poste, photoPath } = this.props;\r\n\r\n        return (\r\n            <div className=\"Member\">\r\n                {deleted ?\r\n                    <div className=\"deletedMember\">\r\n                        Le membre {name} a été supprimé\r\n                    </div>\r\n                    :\r\n                    <Fragment>\r\n                        {loggedIn ?\r\n                            <Fragment>\r\n                                {editing ?\r\n                                    <EditMemberForm year={year} section={section} name={name} />\r\n                                    :\r\n                                    <Fragment>\r\n                                        <img src={process.env.PUBLIC_URL + \"/portraits/\" + year + \"/\" + section + \"/\" + photoPath} className=\"photoMembre\" />\r\n                                        <h3>{name}</h3>\r\n                                        <h4>{poste}</h4>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                <button onClick={this.toggleEditing}>{editing ? \"Stop editing\" : \"Switch to edit mode\"}</button>\r\n                                <button onClick={this.deleteMember}>Supprimer ce membre</button>\r\n                            </Fragment>\r\n                            :\r\n                            <Fragment>\r\n                                <img src={process.env.PUBLIC_URL + \"/portraits/\" + year + \"/\" + section + \"/\" + photoPath} className=\"photoMembre\" />\r\n                                <h3>{name}</h3>\r\n                                <h4>{poste}</h4>\r\n                            </Fragment>\r\n                        }\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Member;","import React from \"react\";\r\nimport Member from \"./Member\";\r\n\r\nimport { NewMemberForm, EditMemberForm } from \"./MemberForm\";\r\nimport \"./static/css/Section.css\";\r\n\r\nclass Section extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            members: this.props.members\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            members: props.members\r\n        });\r\n    }\r\n\r\n    addMember = (member) => {\r\n        this.setState(prevState => ({\r\n            members: [...prevState.members, member]\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { year, loggedIn, name } = this.props;\r\n        const { members } = this.state;\r\n\r\n        const formatedName = (name.charAt(0).toUpperCase() + name.substring(1)).replace(/_/g, \" \"); // titre_de_ouf => Titre de ouf\r\n\r\n        return (\r\n            <div className={\"Section \" + name}>\r\n                <h1>{formatedName}</h1>\r\n\r\n                {loggedIn && <NewMemberForm year={year} section={name} addMember={this.addMember} />}\r\n\r\n                <div className=\"members\">\r\n                    {members.map(member => (\r\n                        <Member year={year} loggedIn={loggedIn} section={name} id={member._id} name={member.name} poste={member.poste} photoPath={member.photoPath} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport Section from \"./Section\"\r\nimport \"./static/css/Team.css\";\r\nimport { apiPath } from \"./App\";\r\n\r\nclass Team extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            year: this.props.year,\r\n            sections: [\"bureau\", \"rôles\", \"troupe\", \"régie\", \"com\", \"musique_et_chant\", \"mise_en_scène\", \"chorégraphie\", \"orchestre\", \"décors_et_costumes\"],\r\n            members: {}\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        for (let section of this.state.sections) {\r\n            this.state.members[section] = [];\r\n        }\r\n\r\n        const getMembresReq = new XMLHttpRequest();\r\n        const app = this;\r\n        getMembresReq.onreadystatechange = function () {\r\n            if (this.readyState === 4 && this.status === 200) {\r\n                const unfilteredMembers = JSON.parse(this.responseText);\r\n                const filteredMembers = {}\r\n\r\n                for (let section of app.state.sections) {\r\n                    filteredMembers[section] = unfilteredMembers.filter(membre => membre.section === section);\r\n                }\r\n\r\n                app.setState({ members: filteredMembers });\r\n            }\r\n        }\r\n        getMembresReq.open(\"GET\", `${apiPath}/api/equipe/` + this.state.year);\r\n        getMembresReq.send();\r\n    }\r\n\r\n    render() {\r\n        const { year, sections, members } = this.state;\r\n        return (\r\n            <div className=\"Team\">\r\n                <div className=\"intro\">\r\n                    <div className=\"introText\">\r\n                        <h1>Fame</h1>\r\n                        <p>Après les péripéties de Footloose en Mai dernier, la CommuS’ revient cette année pour vous présenter Fame ! Grand classique de Broadway adapté du film éponyme des années 90, Fame a déjà conquis des centaines de milliers de spectateurs à travers le monde.</p>\r\n                        <p>Notre troupe de plus de 50 acteurs, chanteurs et danseurs vous fera plonger dans l’univers de la High School of Performing Arts où les élèves travaillent sans répit pour atteindre la célébrité.</p>\r\n                        <p>Entre échecs et histoires d’amour, suivez ces personnages tout au long de leur scolarité pour partager leurs rires et larmes lors de ce spectacle musical  et artistique. </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sections\">\r\n                    {sections.map(\r\n                        name => <Section year={year} loggedIn={this.props.loggedIn} name={name} members={members[name]} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Team;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, NavLink, Redirect, Switch } from \"react-router-dom\";\n\nimport \"./static/css/App.css\";\n\nimport Team from \"./Team\";\n\nconst onProduction = true;\n\nexport const apiPath = onProduction ? \"\" : \"http://localhost:5000\";\n\nexport function getCookie(cname) {\n    if (!document.cookie) return \"\";\n\n    const name = cname + \"=\";\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const cookiesArray = decodedCookie.split(\";\");\n\n    for (let cookie of cookiesArray) {\n        while (cookie.charAt(0) === \" \") {\n            cookie = cookie.substring(1);\n        }\n        if (cookie.indexOf(name) === 0) {\n            return cookie.substring(name.length);\n        }\n    }\n\n    return \"\";\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authToken: null,\n            loggedIn: false,\n            years: [2019]\n        };\n    }\n\n    componentWillMount() {\n        const authToken = getCookie(\"auth_token\");\n\n        if (authToken) this.setState({\n            authToken,\n            loggedIn: true\n        });\n    }\n\n    render() {\n        const { loggedIn, years } = this.state;\n\n        return (\n            <Router basename=\"/equipe\">\n                <div className=\"App\">\n                    <div className=\"links\">\n                        {years.map(\n                            year => <NavLink className=\"yearLink\" to={\"/\" + year} activeStyle={{ color: \"white\" }}>{year}</NavLink>\n                        )}\n                    </div>\n\n                    <Switch>\n                        {years.map(\n                            year => <Route path={\"/\" + year} component={() => <Team loggedIn={loggedIn} year={year} />} />\n                        )}\n                        <Route component={() => <Redirect to=\"/2019\" />} />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./static/css/index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}